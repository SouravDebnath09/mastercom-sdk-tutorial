/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AcquirerFulfillmentRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class AcquirerFulfillmentRequest {
  /**
   * Acquirer Response Code.   NOTE: Acquirers can no longer respond to retrieval requests using the existing process in production, except for transactions related to U.S. healthcare.   NOTE: Below acquirerResponseCd codes will be accepted starting on February 26th, 2023.    A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system   Length: 1   Valid Values/Format: A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system
   */
  @JsonAdapter(AcquirerResponseCdEnum.Adapter.class)
  public enum AcquirerResponseCdEnum {
    A("A"),
    
    B("B"),
    
    C("C"),
    
    E("E"),
    
    F("F"),
    
    G("G"),
    
    H("H");

    private String value;

    AcquirerResponseCdEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AcquirerResponseCdEnum fromValue(String value) {
      for (AcquirerResponseCdEnum b : AcquirerResponseCdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AcquirerResponseCdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AcquirerResponseCdEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AcquirerResponseCdEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AcquirerResponseCdEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACQUIRER_RESPONSE_CD = "acquirerResponseCd";
  @SerializedName(SERIALIZED_NAME_ACQUIRER_RESPONSE_CD)
  private AcquirerResponseCdEnum acquirerResponseCd;

  public static final String SERIALIZED_NAME_REFUND_REVERSAL_TYPE = "refundReversalType";
  @SerializedName(SERIALIZED_NAME_REFUND_REVERSAL_TYPE)
  private String refundReversalType;

  public static final String SERIALIZED_NAME_REFUND_REVERSAL_DATE = "refundReversalDate";
  @SerializedName(SERIALIZED_NAME_REFUND_REVERSAL_DATE)
  private String refundReversalDate;

  public static final String SERIALIZED_NAME_REFUND_REVERSAL_AMOUNT = "refundReversalAmount";
  @SerializedName(SERIALIZED_NAME_REFUND_REVERSAL_AMOUNT)
  private String refundReversalAmount;

  public static final String SERIALIZED_NAME_REFUND_REVERSAL_CURRENCY = "refundReversalCurrency";
  @SerializedName(SERIALIZED_NAME_REFUND_REVERSAL_CURRENCY)
  private String refundReversalCurrency;

  public static final String SERIALIZED_NAME_REFUND_REVERSAL_REFERENCE_ID = "refundReversalReferenceId";
  @SerializedName(SERIALIZED_NAME_REFUND_REVERSAL_REFERENCE_ID)
  private String refundReversalReferenceId;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;


  public AcquirerFulfillmentRequest acquirerResponseCd(AcquirerResponseCdEnum acquirerResponseCd) {
    
    this.acquirerResponseCd = acquirerResponseCd;
    return this;
  }

   /**
   * Acquirer Response Code.   NOTE: Acquirers can no longer respond to retrieval requests using the existing process in production, except for transactions related to U.S. healthcare.   NOTE: Below acquirerResponseCd codes will be accepted starting on February 26th, 2023.    A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system   Length: 1   Valid Values/Format: A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system
   * @return acquirerResponseCd
  **/
  @ApiModelProperty(example = "F", required = true, value = "Acquirer Response Code.   NOTE: Acquirers can no longer respond to retrieval requests using the existing process in production, except for transactions related to U.S. healthcare.   NOTE: Below acquirerResponseCd codes will be accepted starting on February 26th, 2023.    A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system   Length: 1   Valid Values/Format: A - Funds Movement Request, B - Refunded, C - Initiating Refund, E - Reject Collaboration, F - IIAS Unfulfillable, G - IIAS Invalid request information, H - IIAS Fulfilled outside MasterCom system")

  public AcquirerResponseCdEnum getAcquirerResponseCd() {
    return acquirerResponseCd;
  }


  public void setAcquirerResponseCd(AcquirerResponseCdEnum acquirerResponseCd) {
    this.acquirerResponseCd = acquirerResponseCd;
  }


  public AcquirerFulfillmentRequest refundReversalType(String refundReversalType) {
    
    this.refundReversalType = refundReversalType;
    return this;
  }

   /**
   * Refund/Reversal Type.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   If acquirerResponseCd is C, then CREDIT VOUCHER is not a valid value.   Required if acquirerResponseCd is B.   Length: 6-14   Valid Values/Format: REFUND, CREDIT VOUCHER
   * @return refundReversalType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "REFUND", value = "Refund/Reversal Type.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   If acquirerResponseCd is C, then CREDIT VOUCHER is not a valid value.   Required if acquirerResponseCd is B.   Length: 6-14   Valid Values/Format: REFUND, CREDIT VOUCHER")

  public String getRefundReversalType() {
    return refundReversalType;
  }


  public void setRefundReversalType(String refundReversalType) {
    this.refundReversalType = refundReversalType;
  }


  public AcquirerFulfillmentRequest refundReversalDate(String refundReversalDate) {
    
    this.refundReversalDate = refundReversalDate;
    return this;
  }

   /**
   * Refund/Reversal Date.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   Not valid if refundReversalType is not provided.   Required if acquirerResponseCd is B or C and refundReversalType is REFUND.   Length: 16   Valid Values/Format: Date (yyyy-MM-ddTHH:mm)
   * @return refundReversalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-15T12:01", value = "Refund/Reversal Date.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   Not valid if refundReversalType is not provided.   Required if acquirerResponseCd is B or C and refundReversalType is REFUND.   Length: 16   Valid Values/Format: Date (yyyy-MM-ddTHH:mm)")

  public String getRefundReversalDate() {
    return refundReversalDate;
  }


  public void setRefundReversalDate(String refundReversalDate) {
    this.refundReversalDate = refundReversalDate;
  }


  public AcquirerFulfillmentRequest refundReversalAmount(String refundReversalAmount) {
    
    this.refundReversalAmount = refundReversalAmount;
    return this;
  }

   /**
   * Refund/Reversal Amount.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   This field is only valid if acquirerResponseCd is B and refundReversalType is CREDIT VOUCHER.   Not valid if refundReversalType is not provided.   Valid Values/Format: Numeric
   * @return refundReversalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.00", value = "Refund/Reversal Amount.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   This field is only valid if acquirerResponseCd is B and refundReversalType is CREDIT VOUCHER.   Not valid if refundReversalType is not provided.   Valid Values/Format: Numeric")

  public String getRefundReversalAmount() {
    return refundReversalAmount;
  }


  public void setRefundReversalAmount(String refundReversalAmount) {
    this.refundReversalAmount = refundReversalAmount;
  }


  public AcquirerFulfillmentRequest refundReversalCurrency(String refundReversalCurrency) {
    
    this.refundReversalCurrency = refundReversalCurrency;
    return this;
  }

   /**
   * Refund/Reversal Currency.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   This field is only valid if acquirerResponseCd is B and refundReversalType is CREDIT VOUCHER.   Not valid if refundReversalType is not provided.   Length: 3   Valid Values/Format: A-Z (Uppercase Alphabetic Letter)
   * @return refundReversalCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Refund/Reversal Currency.   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   This field is only valid if acquirerResponseCd is B and refundReversalType is CREDIT VOUCHER.   Not valid if refundReversalType is not provided.   Length: 3   Valid Values/Format: A-Z (Uppercase Alphabetic Letter)")

  public String getRefundReversalCurrency() {
    return refundReversalCurrency;
  }


  public void setRefundReversalCurrency(String refundReversalCurrency) {
    this.refundReversalCurrency = refundReversalCurrency;
  }


  public AcquirerFulfillmentRequest refundReversalReferenceId(String refundReversalReferenceId) {
    
    this.refundReversalReferenceId = refundReversalReferenceId;
    return this;
  }

   /**
   * For Transaction type Authorized transactions:&lt;br&gt; First 12 positions of Data Element (DE) 63 (Network Data) from one of the following:&lt;br&gt; – Authorized refund message (Authorization Request Response/0110 or Financial Transaction Request Response/0210)&lt;br&gt; – Reversal message (Reversal Request Response/ 0410 or Acquirer Reversal Advice Response/ 0430)&lt;br&gt; – Automated fuel dispenser transaction (MCC &#x3D; 5542 and CAT Level 2) (Authorization Advice Response/0130)   For Transaction type Cleared transactions:&lt;br&gt;  DE 63 (Network Data), subfield 2 (Trace ID) in the First Presentment/1240 message   For Transaction type Not authorized but cleared transactions:&lt;br&gt;  Either Private Data Subelement (PDS) 0105 (File ID) or PDS 158, subfield 5 (Central Site Business Date) and subfield 6 (Business Cycle) with no spaces   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   Not valid if refundReversalType is not provided.   Required if acquirerResponseCd is B or C and refundReversalType is REFUND.   Length: 8-25   Valid Values/Format: Alphanumeric
   * @return refundReversalReferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123458111", value = "For Transaction type Authorized transactions:<br> First 12 positions of Data Element (DE) 63 (Network Data) from one of the following:<br> – Authorized refund message (Authorization Request Response/0110 or Financial Transaction Request Response/0210)<br> – Reversal message (Reversal Request Response/ 0410 or Acquirer Reversal Advice Response/ 0430)<br> – Automated fuel dispenser transaction (MCC = 5542 and CAT Level 2) (Authorization Advice Response/0130)   For Transaction type Cleared transactions:<br>  DE 63 (Network Data), subfield 2 (Trace ID) in the First Presentment/1240 message   For Transaction type Not authorized but cleared transactions:<br>  Either Private Data Subelement (PDS) 0105 (File ID) or PDS 158, subfield 5 (Central Site Business Date) and subfield 6 (Business Cycle) with no spaces   CONDITIONAL: This field is not valid if acquirerResponseCd is A, E, F, G or H.   Not valid if refundReversalType is not provided.   Required if acquirerResponseCd is B or C and refundReversalType is REFUND.   Length: 8-25   Valid Values/Format: Alphanumeric")

  public String getRefundReversalReferenceId() {
    return refundReversalReferenceId;
  }


  public void setRefundReversalReferenceId(String refundReversalReferenceId) {
    this.refundReversalReferenceId = refundReversalReferenceId;
  }


  public AcquirerFulfillmentRequest memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Memo.   Length: 1-100   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return memo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a test memo", value = "Memo.   Length: 1-100   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AcquirerFulfillmentRequest acquirerFulfillmentRequest = (AcquirerFulfillmentRequest) o;
    return Objects.equals(this.acquirerResponseCd, acquirerFulfillmentRequest.acquirerResponseCd) &&
        Objects.equals(this.refundReversalType, acquirerFulfillmentRequest.refundReversalType) &&
        Objects.equals(this.refundReversalDate, acquirerFulfillmentRequest.refundReversalDate) &&
        Objects.equals(this.refundReversalAmount, acquirerFulfillmentRequest.refundReversalAmount) &&
        Objects.equals(this.refundReversalCurrency, acquirerFulfillmentRequest.refundReversalCurrency) &&
        Objects.equals(this.refundReversalReferenceId, acquirerFulfillmentRequest.refundReversalReferenceId) &&
        Objects.equals(this.memo, acquirerFulfillmentRequest.memo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirerResponseCd, refundReversalType, refundReversalDate, refundReversalAmount, refundReversalCurrency, refundReversalReferenceId, memo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AcquirerFulfillmentRequest {\n");
    sb.append("    acquirerResponseCd: ").append(toIndentedString(acquirerResponseCd)).append("\n");
    sb.append("    refundReversalType: ").append(toIndentedString(refundReversalType)).append("\n");
    sb.append("    refundReversalDate: ").append(toIndentedString(refundReversalDate)).append("\n");
    sb.append("    refundReversalAmount: ").append(toIndentedString(refundReversalAmount)).append("\n");
    sb.append("    refundReversalCurrency: ").append(toIndentedString(refundReversalCurrency)).append("\n");
    sb.append("    refundReversalReferenceId: ").append(toIndentedString(refundReversalReferenceId)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

