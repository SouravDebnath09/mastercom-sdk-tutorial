/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FeeDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class FeeDetails {
  public static final String SERIALIZED_NAME_CARD_ACCEPTOR_ID_CODE = "cardAcceptorIdCode";
  @SerializedName(SERIALIZED_NAME_CARD_ACCEPTOR_ID_CODE)
  private String cardAcceptorIdCode;

  public static final String SERIALIZED_NAME_CARD_NUMBER = "cardNumber";
  @SerializedName(SERIALIZED_NAME_CARD_NUMBER)
  private String cardNumber;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_FEE_DATE = "feeDate";
  @SerializedName(SERIALIZED_NAME_FEE_DATE)
  private String feeDate;

  public static final String SERIALIZED_NAME_DESTINATION_MEMBER = "destinationMember";
  @SerializedName(SERIALIZED_NAME_DESTINATION_MEMBER)
  private String destinationMember;

  public static final String SERIALIZED_NAME_FEE_ID = "feeId";
  @SerializedName(SERIALIZED_NAME_FEE_ID)
  private String feeId;

  public static final String SERIALIZED_NAME_FEE_AMOUNT = "feeAmount";
  @SerializedName(SERIALIZED_NAME_FEE_AMOUNT)
  private String feeAmount;

  public static final String SERIALIZED_NAME_CREDIT_SENDER = "creditSender";
  @SerializedName(SERIALIZED_NAME_CREDIT_SENDER)
  private Boolean creditSender;

  public static final String SERIALIZED_NAME_CREDIT_RECEIVER = "creditReceiver";
  @SerializedName(SERIALIZED_NAME_CREDIT_RECEIVER)
  private Boolean creditReceiver;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_REJECT_REASON = "rejectReason";
  @SerializedName(SERIALIZED_NAME_REJECT_REASON)
  private String rejectReason;

  public static final String SERIALIZED_NAME_CHARGEBACK_REF_NUM = "chargebackRefNum";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_REF_NUM)
  private String chargebackRefNum;

  public static final String SERIALIZED_NAME_RECONCILIATION_AMOUNT = "reconciliationAmount";
  @SerializedName(SERIALIZED_NAME_RECONCILIATION_AMOUNT)
  private String reconciliationAmount;

  public static final String SERIALIZED_NAME_RECONCILIATION_CURRENCY = "reconciliationCurrency";
  @SerializedName(SERIALIZED_NAME_RECONCILIATION_CURRENCY)
  private String reconciliationCurrency;

  public static final String SERIALIZED_NAME_JAPAN_COMMON_MERCHANT_CODE = "japanCommonMerchantCode";
  @SerializedName(SERIALIZED_NAME_JAPAN_COMMON_MERCHANT_CODE)
  private String japanCommonMerchantCode;

  public static final String SERIALIZED_NAME_INSTALLMENT_DATA = "installmentData";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT_DATA)
  private String installmentData;

  public static final String SERIALIZED_NAME_FLEX_CODE = "flexCode";
  @SerializedName(SERIALIZED_NAME_FLEX_CODE)
  private String flexCode;


  public FeeDetails cardAcceptorIdCode(String cardAcceptorIdCode) {
    
    this.cardAcceptorIdCode = cardAcceptorIdCode;
    return this;
  }

   /**
   * Merchant Id associated with this fee collection..if any
   * @return cardAcceptorIdCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test ID", value = "Merchant Id associated with this fee collection..if any")

  public String getCardAcceptorIdCode() {
    return cardAcceptorIdCode;
  }


  public void setCardAcceptorIdCode(String cardAcceptorIdCode) {
    this.cardAcceptorIdCode = cardAcceptorIdCode;
  }


  public FeeDetails cardNumber(String cardNumber) {
    
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Card number when required by the reason code
   * @return cardNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "510001000000134", value = "Card number when required by the reason code")

  public String getCardNumber() {
    return cardNumber;
  }


  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }


  public FeeDetails countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Code identifying the country
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USA", value = "Code identifying the country")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public FeeDetails currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency of the fee
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency of the fee")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public FeeDetails feeDate(String feeDate) {
    
    this.feeDate = feeDate;
    return this;
  }

   /**
   * Date the fee was attached to the claim
   * @return feeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-13", value = "Date the fee was attached to the claim")

  public String getFeeDate() {
    return feeDate;
  }


  public void setFeeDate(String feeDate) {
    this.feeDate = feeDate;
  }


  public FeeDetails destinationMember(String destinationMember) {
    
    this.destinationMember = destinationMember;
    return this;
  }

   /**
   * Destination member for the fee collection
   * @return destinationMember
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "002083", value = "Destination member for the fee collection")

  public String getDestinationMember() {
    return destinationMember;
  }


  public void setDestinationMember(String destinationMember) {
    this.destinationMember = destinationMember;
  }


  public FeeDetails feeId(String feeId) {
    
    this.feeId = feeId;
    return this;
  }

   /**
   * Identifier assigned to the fee
   * @return feeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20002052146", value = "Identifier assigned to the fee")

  public String getFeeId() {
    return feeId;
  }


  public void setFeeId(String feeId) {
    this.feeId = feeId;
  }


  public FeeDetails feeAmount(String feeAmount) {
    
    this.feeAmount = feeAmount;
    return this;
  }

   /**
   * Amount of the fee.    - When the amount is a credit to the sender of the fee collection, the value of feeAmount is positive.    - When the amount is a debit to the sender of the fee collection, the value of feeAmount is negative.    - When the amount is a credit to the receiver of the fee collection, the value of feeAmount is negative.    - When the amount is a debit to the receiver of the fee collection, the value of feeAmount is positive.    See also the creditSender and creditReceiver parameters.
   * @return feeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.00", value = "Amount of the fee.    - When the amount is a credit to the sender of the fee collection, the value of feeAmount is positive.    - When the amount is a debit to the sender of the fee collection, the value of feeAmount is negative.    - When the amount is a credit to the receiver of the fee collection, the value of feeAmount is negative.    - When the amount is a debit to the receiver of the fee collection, the value of feeAmount is positive.    See also the creditSender and creditReceiver parameters.")

  public String getFeeAmount() {
    return feeAmount;
  }


  public void setFeeAmount(String feeAmount) {
    this.feeAmount = feeAmount;
  }


  public FeeDetails creditSender(Boolean creditSender) {
    
    this.creditSender = creditSender;
    return this;
  }

   /**
   * Credit the Sender
   * @return creditSender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Credit the Sender")

  public Boolean getCreditSender() {
    return creditSender;
  }


  public void setCreditSender(Boolean creditSender) {
    this.creditSender = creditSender;
  }


  public FeeDetails creditReceiver(Boolean creditReceiver) {
    
    this.creditReceiver = creditReceiver;
    return this;
  }

   /**
   * Credit the Receiver
   * @return creditReceiver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Credit the Receiver")

  public Boolean getCreditReceiver() {
    return creditReceiver;
  }


  public void setCreditReceiver(Boolean creditReceiver) {
    this.creditReceiver = creditReceiver;
  }


  public FeeDetails message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Message regarding fee
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a test message", value = "Message regarding fee")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public FeeDetails reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Collection Reason Code
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7604", value = "Collection Reason Code")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public FeeDetails rejectReason(String rejectReason) {
    
    this.rejectReason = rejectReason;
    return this;
  }

   /**
   * Fee reject reason.
   * @return rejectReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Code1=0142(00):D0063/002;DE072=D0063\\\\8000000808\\\\\\\\", value = "Fee reject reason.")

  public String getRejectReason() {
    return rejectReason;
  }


  public void setRejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
  }


  public FeeDetails chargebackRefNum(String chargebackRefNum) {
    
    this.chargebackRefNum = chargebackRefNum;
    return this;
  }

   /**
   * Contains card issuer reference data for a specific cardholder transaction. This number must be unique within BIN. It is used to track the chargeback throughout its life cycle
   * @return chargebackRefNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9000000006", value = "Contains card issuer reference data for a specific cardholder transaction. This number must be unique within BIN. It is used to track the chargeback throughout its life cycle")

  public String getChargebackRefNum() {
    return chargebackRefNum;
  }


  public void setChargebackRefNum(String chargebackRefNum) {
    this.chargebackRefNum = chargebackRefNum;
  }


  public FeeDetails reconciliationAmount(String reconciliationAmount) {
    
    this.reconciliationAmount = reconciliationAmount;
    return this;
  }

   /**
   * Reconciliation amount of the fee. Amount will only be retrieved by the receiver side of the fee
   * @return reconciliationAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20.25", value = "Reconciliation amount of the fee. Amount will only be retrieved by the receiver side of the fee")

  public String getReconciliationAmount() {
    return reconciliationAmount;
  }


  public void setReconciliationAmount(String reconciliationAmount) {
    this.reconciliationAmount = reconciliationAmount;
  }


  public FeeDetails reconciliationCurrency(String reconciliationCurrency) {
    
    this.reconciliationCurrency = reconciliationCurrency;
    return this;
  }

   /**
   * Reconciliation currency of the fee. Currency will only be retrieved by the receiver side of the fee
   * @return reconciliationCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EUR", value = "Reconciliation currency of the fee. Currency will only be retrieved by the receiver side of the fee")

  public String getReconciliationCurrency() {
    return reconciliationCurrency;
  }


  public void setReconciliationCurrency(String reconciliationCurrency) {
    this.reconciliationCurrency = reconciliationCurrency;
  }


  public FeeDetails japanCommonMerchantCode(String japanCommonMerchantCode) {
    
    this.japanCommonMerchantCode = japanCommonMerchantCode;
    return this;
  }

   /**
   * Identifies the merchant&#39;s category in Japan referred to as the Common Merchant Category Code (CMC). Mastercard uses this value to identify a link to a corresponding Mastercard Assigned ID.
   * @return japanCommonMerchantCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0410", value = "Identifies the merchant's category in Japan referred to as the Common Merchant Category Code (CMC). Mastercard uses this value to identify a link to a corresponding Mastercard Assigned ID.")

  public String getJapanCommonMerchantCode() {
    return japanCommonMerchantCode;
  }


  public void setJapanCommonMerchantCode(String japanCommonMerchantCode) {
    this.japanCommonMerchantCode = japanCommonMerchantCode;
  }


  public FeeDetails installmentData(String installmentData) {
    
    this.installmentData = installmentData;
    return this;
  }

   /**
   * Provides information about the installment payment option selected by the cardholder at the point of interaction.
   * @return installmentData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1261610E81023498764532103", value = "Provides information about the installment payment option selected by the cardholder at the point of interaction.")

  public String getInstallmentData() {
    return installmentData;
  }


  public void setInstallmentData(String installmentData) {
    this.installmentData = installmentData;
  }


  public FeeDetails flexCode(String flexCode) {
    
    this.flexCode = flexCode;
    return this;
  }

   /**
   * Specific to Brazil Flex Card transactions to communicate the product code used for clearing.
   * @return flexCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "003", value = "Specific to Brazil Flex Card transactions to communicate the product code used for clearing.")

  public String getFlexCode() {
    return flexCode;
  }


  public void setFlexCode(String flexCode) {
    this.flexCode = flexCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeeDetails feeDetails = (FeeDetails) o;
    return Objects.equals(this.cardAcceptorIdCode, feeDetails.cardAcceptorIdCode) &&
        Objects.equals(this.cardNumber, feeDetails.cardNumber) &&
        Objects.equals(this.countryCode, feeDetails.countryCode) &&
        Objects.equals(this.currency, feeDetails.currency) &&
        Objects.equals(this.feeDate, feeDetails.feeDate) &&
        Objects.equals(this.destinationMember, feeDetails.destinationMember) &&
        Objects.equals(this.feeId, feeDetails.feeId) &&
        Objects.equals(this.feeAmount, feeDetails.feeAmount) &&
        Objects.equals(this.creditSender, feeDetails.creditSender) &&
        Objects.equals(this.creditReceiver, feeDetails.creditReceiver) &&
        Objects.equals(this.message, feeDetails.message) &&
        Objects.equals(this.reason, feeDetails.reason) &&
        Objects.equals(this.rejectReason, feeDetails.rejectReason) &&
        Objects.equals(this.chargebackRefNum, feeDetails.chargebackRefNum) &&
        Objects.equals(this.reconciliationAmount, feeDetails.reconciliationAmount) &&
        Objects.equals(this.reconciliationCurrency, feeDetails.reconciliationCurrency) &&
        Objects.equals(this.japanCommonMerchantCode, feeDetails.japanCommonMerchantCode) &&
        Objects.equals(this.installmentData, feeDetails.installmentData) &&
        Objects.equals(this.flexCode, feeDetails.flexCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardAcceptorIdCode, cardNumber, countryCode, currency, feeDate, destinationMember, feeId, feeAmount, creditSender, creditReceiver, message, reason, rejectReason, chargebackRefNum, reconciliationAmount, reconciliationCurrency, japanCommonMerchantCode, installmentData, flexCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeeDetails {\n");
    sb.append("    cardAcceptorIdCode: ").append(toIndentedString(cardAcceptorIdCode)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    feeDate: ").append(toIndentedString(feeDate)).append("\n");
    sb.append("    destinationMember: ").append(toIndentedString(destinationMember)).append("\n");
    sb.append("    feeId: ").append(toIndentedString(feeId)).append("\n");
    sb.append("    feeAmount: ").append(toIndentedString(feeAmount)).append("\n");
    sb.append("    creditSender: ").append(toIndentedString(creditSender)).append("\n");
    sb.append("    creditReceiver: ").append(toIndentedString(creditReceiver)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    rejectReason: ").append(toIndentedString(rejectReason)).append("\n");
    sb.append("    chargebackRefNum: ").append(toIndentedString(chargebackRefNum)).append("\n");
    sb.append("    reconciliationAmount: ").append(toIndentedString(reconciliationAmount)).append("\n");
    sb.append("    reconciliationCurrency: ").append(toIndentedString(reconciliationCurrency)).append("\n");
    sb.append("    japanCommonMerchantCode: ").append(toIndentedString(japanCommonMerchantCode)).append("\n");
    sb.append("    installmentData: ").append(toIndentedString(installmentData)).append("\n");
    sb.append("    flexCode: ").append(toIndentedString(flexCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

