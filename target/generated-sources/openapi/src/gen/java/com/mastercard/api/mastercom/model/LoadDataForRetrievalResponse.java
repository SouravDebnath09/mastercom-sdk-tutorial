/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.api.mastercom.model.RetrievalDocNeededNameValueDetail;
import com.mastercard.api.mastercom.model.RetrievalReasonCodesNameValueDetail;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LoadDataForRetrievalResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class LoadDataForRetrievalResponse {
  public static final String SERIALIZED_NAME_DOC_NEEDED = "docNeeded";
  @SerializedName(SERIALIZED_NAME_DOC_NEEDED)
  private List<RetrievalDocNeededNameValueDetail> docNeeded = null;

  public static final String SERIALIZED_NAME_REASON_CODES = "reasonCodes";
  @SerializedName(SERIALIZED_NAME_REASON_CODES)
  private List<RetrievalReasonCodesNameValueDetail> reasonCodes = null;


  public LoadDataForRetrievalResponse docNeeded(List<RetrievalDocNeededNameValueDetail> docNeeded) {
    
    this.docNeeded = docNeeded;
    return this;
  }

  public LoadDataForRetrievalResponse addDocNeededItem(RetrievalDocNeededNameValueDetail docNeededItem) {
    if (this.docNeeded == null) {
      this.docNeeded = new ArrayList<RetrievalDocNeededNameValueDetail>();
    }
    this.docNeeded.add(docNeededItem);
    return this;
  }

   /**
   * List of valid docNeeded fields
   * @return docNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of valid docNeeded fields")

  public List<RetrievalDocNeededNameValueDetail> getDocNeeded() {
    return docNeeded;
  }


  public void setDocNeeded(List<RetrievalDocNeededNameValueDetail> docNeeded) {
    this.docNeeded = docNeeded;
  }


  public LoadDataForRetrievalResponse reasonCodes(List<RetrievalReasonCodesNameValueDetail> reasonCodes) {
    
    this.reasonCodes = reasonCodes;
    return this;
  }

  public LoadDataForRetrievalResponse addReasonCodesItem(RetrievalReasonCodesNameValueDetail reasonCodesItem) {
    if (this.reasonCodes == null) {
      this.reasonCodes = new ArrayList<RetrievalReasonCodesNameValueDetail>();
    }
    this.reasonCodes.add(reasonCodesItem);
    return this;
  }

   /**
   * List of valid reason codes
   * @return reasonCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of valid reason codes")

  public List<RetrievalReasonCodesNameValueDetail> getReasonCodes() {
    return reasonCodes;
  }


  public void setReasonCodes(List<RetrievalReasonCodesNameValueDetail> reasonCodes) {
    this.reasonCodes = reasonCodes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadDataForRetrievalResponse loadDataForRetrievalResponse = (LoadDataForRetrievalResponse) o;
    return Objects.equals(this.docNeeded, loadDataForRetrievalResponse.docNeeded) &&
        Objects.equals(this.reasonCodes, loadDataForRetrievalResponse.reasonCodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docNeeded, reasonCodes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadDataForRetrievalResponse {\n");
    sb.append("    docNeeded: ").append(toIndentedString(docNeeded)).append("\n");
    sb.append("    reasonCodes: ").append(toIndentedString(reasonCodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

