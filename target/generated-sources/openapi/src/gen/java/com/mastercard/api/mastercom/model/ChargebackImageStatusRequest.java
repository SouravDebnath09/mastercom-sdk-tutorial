/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ChargebackImageStatusRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class ChargebackImageStatusRequest {
  /**
   * Status of chargeback image to query.   Length: 6-18   Valid Values/Format: COMPLETED, FAILED, PENDING, UNAVAILABLE AND DOC_NOT_APPLICABLE.   COMPLETED: Image was processed and no further action required.   FAILED: Some failure happened during image process flow, i.e,The image could not be converted, The image is not imported, Image extension not supported etc.   PENDING: The image is pending to be processed.   DOC_NOT_APPLICABLE: The dispute does not require a document.   UNAVAILABLE: The image is unavailable because it is not picked up by mastercom internal processes yet.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    COMPLETED("COMPLETED"),
    
    FAILED("FAILED"),
    
    PENDING("PENDING"),
    
    UNAVAILABLE("UNAVAILABLE"),
    
    DOC_NOT_APPLICABLE("DOC_NOT_APPLICABLE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_ICA = "ica";
  @SerializedName(SERIALIZED_NAME_ICA)
  private String ica;


  public ChargebackImageStatusRequest status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of chargeback image to query.   Length: 6-18   Valid Values/Format: COMPLETED, FAILED, PENDING, UNAVAILABLE AND DOC_NOT_APPLICABLE.   COMPLETED: Image was processed and no further action required.   FAILED: Some failure happened during image process flow, i.e,The image could not be converted, The image is not imported, Image extension not supported etc.   PENDING: The image is pending to be processed.   DOC_NOT_APPLICABLE: The dispute does not require a document.   UNAVAILABLE: The image is unavailable because it is not picked up by mastercom internal processes yet.
   * @return status
  **/
  @ApiModelProperty(example = "COMPLETED", required = true, value = "Status of chargeback image to query.   Length: 6-18   Valid Values/Format: COMPLETED, FAILED, PENDING, UNAVAILABLE AND DOC_NOT_APPLICABLE.   COMPLETED: Image was processed and no further action required.   FAILED: Some failure happened during image process flow, i.e,The image could not be converted, The image is not imported, Image extension not supported etc.   PENDING: The image is pending to be processed.   DOC_NOT_APPLICABLE: The dispute does not require a document.   UNAVAILABLE: The image is unavailable because it is not picked up by mastercom internal processes yet.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ChargebackImageStatusRequest startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Start Date.   CONDITIONAL: If startDate is provided then endDate is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return startDate
  **/
  @ApiModelProperty(example = "2021-01-03", required = true, value = "Start Date.   CONDITIONAL: If startDate is provided then endDate is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public ChargebackImageStatusRequest endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End Date.   CONDITIONAL: If endDate is provided then startDate is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return endDate
  **/
  @ApiModelProperty(example = "2021-01-18", required = true, value = "End Date.   CONDITIONAL: If endDate is provided then startDate is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public ChargebackImageStatusRequest ica(String ica) {
    
    this.ica = ica;
    return this;
  }

   /**
   * The ICA value to return the Image Status
   * @return ica
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123456", value = "The ICA value to return the Image Status")

  public String getIca() {
    return ica;
  }


  public void setIca(String ica) {
    this.ica = ica;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargebackImageStatusRequest chargebackImageStatusRequest = (ChargebackImageStatusRequest) o;
    return Objects.equals(this.status, chargebackImageStatusRequest.status) &&
        Objects.equals(this.startDate, chargebackImageStatusRequest.startDate) &&
        Objects.equals(this.endDate, chargebackImageStatusRequest.endDate) &&
        Objects.equals(this.ica, chargebackImageStatusRequest.ica);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, startDate, endDate, ica);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargebackImageStatusRequest {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    ica: ").append(toIndentedString(ica)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

