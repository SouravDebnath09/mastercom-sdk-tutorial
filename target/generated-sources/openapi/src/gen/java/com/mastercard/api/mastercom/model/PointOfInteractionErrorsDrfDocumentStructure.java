/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PointOfInteractionErrorsDrfDocumentStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class PointOfInteractionErrorsDrfDocumentStructure {
  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT = "transactionAmount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT)
  private String transactionAmount;

  /**
   * The type of the error.   Length: 15-27   Valid Values/Format: DUPLICATE_DEBIT, INCORRECT_AMOUNT, LTD_TRANSACTION, CURRENCY_DISPUTE, UNREASONABLE_AMOUNT, DUPLICATE_TRANSACTION, MERCHANT_CREDIT, IMPROPER_MERCHANT_SURCHARGE
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DUPLICATE_DEBIT("DUPLICATE_DEBIT"),
    
    INCORRECT_AMOUNT("INCORRECT_AMOUNT"),
    
    LTD_TRANSACTION("LTD_TRANSACTION"),
    
    CURRENCY_DISPUTE("CURRENCY_DISPUTE"),
    
    UNREASONABLE_AMOUNT("UNREASONABLE_AMOUNT"),
    
    DUPLICATE_TRANSACTION("DUPLICATE_TRANSACTION"),
    
    MERCHANT_CREDIT("MERCHANT_CREDIT"),
    
    IMPROPER_MERCHANT_SURCHARGE("IMPROPER_MERCHANT_SURCHARGE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ALTERNATE_MEANS_OF_PAYMENT_DETAILS = "alternateMeansOfPaymentDetails";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_MEANS_OF_PAYMENT_DETAILS)
  private String alternateMeansOfPaymentDetails;

  public static final String SERIALIZED_NAME_DISPUTE_DETAILS = "disputeDetails";
  @SerializedName(SERIALIZED_NAME_DISPUTE_DETAILS)
  private String disputeDetails;

  public static final String SERIALIZED_NAME_CHARGEBACK_REPRESENTATIVE = "chargebackRepresentative";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_REPRESENTATIVE)
  private String chargebackRepresentative;


  public PointOfInteractionErrorsDrfDocumentStructure transactionAmount(String transactionAmount) {
    
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * The transaction amount.   Length: 0-12   Valid Values/Format: Numeric
   * @return transactionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20000", value = "The transaction amount.   Length: 0-12   Valid Values/Format: Numeric")

  public String getTransactionAmount() {
    return transactionAmount;
  }


  public void setTransactionAmount(String transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public PointOfInteractionErrorsDrfDocumentStructure type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the error.   Length: 15-27   Valid Values/Format: DUPLICATE_DEBIT, INCORRECT_AMOUNT, LTD_TRANSACTION, CURRENCY_DISPUTE, UNREASONABLE_AMOUNT, DUPLICATE_TRANSACTION, MERCHANT_CREDIT, IMPROPER_MERCHANT_SURCHARGE
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DUPLICATE_DEBIT", value = "The type of the error.   Length: 15-27   Valid Values/Format: DUPLICATE_DEBIT, INCORRECT_AMOUNT, LTD_TRANSACTION, CURRENCY_DISPUTE, UNREASONABLE_AMOUNT, DUPLICATE_TRANSACTION, MERCHANT_CREDIT, IMPROPER_MERCHANT_SURCHARGE")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PointOfInteractionErrorsDrfDocumentStructure alternateMeansOfPaymentDetails(String alternateMeansOfPaymentDetails) {
    
    this.alternateMeansOfPaymentDetails = alternateMeansOfPaymentDetails;
    return this;
  }

   /**
   * CONDITIONAL: in case of DUPLICATE_DEBIT, Alternate means of payment details.   Length: 0-55   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return alternateMeansOfPaymentDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test alternate means of payment details", value = "CONDITIONAL: in case of DUPLICATE_DEBIT, Alternate means of payment details.   Length: 0-55   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getAlternateMeansOfPaymentDetails() {
    return alternateMeansOfPaymentDetails;
  }


  public void setAlternateMeansOfPaymentDetails(String alternateMeansOfPaymentDetails) {
    this.alternateMeansOfPaymentDetails = alternateMeansOfPaymentDetails;
  }


  public PointOfInteractionErrorsDrfDocumentStructure disputeDetails(String disputeDetails) {
    
    this.disputeDetails = disputeDetails;
    return this;
  }

   /**
   * Describe the cardholder’s compliant in sufficient detail to meet the requirements for the chargeback as described in the Chargeback Guide and to enable all parties to understand the dispute.   Length: 0-4800   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return disputeDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test dispute details", value = "Describe the cardholder’s compliant in sufficient detail to meet the requirements for the chargeback as described in the Chargeback Guide and to enable all parties to understand the dispute.   Length: 0-4800   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getDisputeDetails() {
    return disputeDetails;
  }


  public void setDisputeDetails(String disputeDetails) {
    this.disputeDetails = disputeDetails;
  }


  public PointOfInteractionErrorsDrfDocumentStructure chargebackRepresentative(String chargebackRepresentative) {
    
    this.chargebackRepresentative = chargebackRepresentative;
    return this;
  }

   /**
   * Customer Service/Chargeback Representative.   Length: 0-25   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return chargebackRepresentative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test Chargeback representative", value = "Customer Service/Chargeback Representative.   Length: 0-25   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getChargebackRepresentative() {
    return chargebackRepresentative;
  }


  public void setChargebackRepresentative(String chargebackRepresentative) {
    this.chargebackRepresentative = chargebackRepresentative;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PointOfInteractionErrorsDrfDocumentStructure pointOfInteractionErrorsDrfDocumentStructure = (PointOfInteractionErrorsDrfDocumentStructure) o;
    return Objects.equals(this.transactionAmount, pointOfInteractionErrorsDrfDocumentStructure.transactionAmount) &&
        Objects.equals(this.type, pointOfInteractionErrorsDrfDocumentStructure.type) &&
        Objects.equals(this.alternateMeansOfPaymentDetails, pointOfInteractionErrorsDrfDocumentStructure.alternateMeansOfPaymentDetails) &&
        Objects.equals(this.disputeDetails, pointOfInteractionErrorsDrfDocumentStructure.disputeDetails) &&
        Objects.equals(this.chargebackRepresentative, pointOfInteractionErrorsDrfDocumentStructure.chargebackRepresentative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionAmount, type, alternateMeansOfPaymentDetails, disputeDetails, chargebackRepresentative);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PointOfInteractionErrorsDrfDocumentStructure {\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    alternateMeansOfPaymentDetails: ").append(toIndentedString(alternateMeansOfPaymentDetails)).append("\n");
    sb.append("    disputeDetails: ").append(toIndentedString(disputeDetails)).append("\n");
    sb.append("    chargebackRepresentative: ").append(toIndentedString(chargebackRepresentative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

