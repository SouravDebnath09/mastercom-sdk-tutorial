/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.api.mastercom.model.CaseFilingEbdfStructure;
import com.mastercard.api.mastercom.model.DocumentStructure;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateCaseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class CreateCaseRequest {
  /**
   * Type of Case Filing.   Length: 1   Valid Values/Format: 1-Pre-arbitration, 2-Arbitration, 3-Pre-compliance, 4-Compliance
   */
  @JsonAdapter(CaseTypeEnum.Adapter.class)
  public enum CaseTypeEnum {
    _1("1"),
    
    _2("2"),
    
    _3("3"),
    
    _4("4");

    private String value;

    CaseTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CaseTypeEnum fromValue(String value) {
      for (CaseTypeEnum b : CaseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CaseTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CaseTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CaseTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CaseTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CASE_TYPE = "caseType";
  @SerializedName(SERIALIZED_NAME_CASE_TYPE)
  private CaseTypeEnum caseType;

  public static final String SERIALIZED_NAME_CHARGEBACK_REF_NUM = "chargebackRefNum";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_REF_NUM)
  private List<String> chargebackRefNum = null;

  public static final String SERIALIZED_NAME_CUSTOMER_FILING_NUMBER = "customerFilingNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FILING_NUMBER)
  private String customerFilingNumber;

  public static final String SERIALIZED_NAME_DISPUTE_AMOUNT = "disputeAmount";
  @SerializedName(SERIALIZED_NAME_DISPUTE_AMOUNT)
  private String disputeAmount;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private String dueDate;

  public static final String SERIALIZED_NAME_FILE_ATTACHMENT = "fileAttachment";
  @SerializedName(SERIALIZED_NAME_FILE_ATTACHMENT)
  private DocumentStructure fileAttachment;

  public static final String SERIALIZED_NAME_FILED_AGAINST_ICA = "filedAgainstIca";
  @SerializedName(SERIALIZED_NAME_FILED_AGAINST_ICA)
  private String filedAgainstIca;

  /**
   * Filing case as Issuer or Acquirer.   Length: 1   Valid Values/Format: I, A
   */
  @JsonAdapter(FilingAsEnum.Adapter.class)
  public enum FilingAsEnum {
    I("I"),
    
    A("A");

    private String value;

    FilingAsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FilingAsEnum fromValue(String value) {
      for (FilingAsEnum b : FilingAsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FilingAsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FilingAsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FilingAsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FilingAsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FILING_AS = "filingAs";
  @SerializedName(SERIALIZED_NAME_FILING_AS)
  private FilingAsEnum filingAs;

  public static final String SERIALIZED_NAME_FILING_ICA = "filingIca";
  @SerializedName(SERIALIZED_NAME_FILING_ICA)
  private String filingIca;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_MESSAGE_TEXT = "messageText";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TEXT)
  private String messageText;

  public static final String SERIALIZED_NAME_CHANGE_REASON_CODE_FLAG = "changeReasonCodeFlag";
  @SerializedName(SERIALIZED_NAME_CHANGE_REASON_CODE_FLAG)
  private String changeReasonCodeFlag;

  /**
   * Updated Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case for sender while creating the case and if changeReasonCodeFlag is Y.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29
   */
  @JsonAdapter(UpdatedChargebackReasonCodeEnum.Adapter.class)
  public enum UpdatedChargebackReasonCodeEnum {
    _4863("4863"),
    
    _4899("4899"),
    
    _2001("2001"),
    
    _2002("2002"),
    
    _2003("2003"),
    
    _2004("2004"),
    
    _2005("2005"),
    
    _2008("2008"),
    
    _2011("2011"),
    
    _2700("2700"),
    
    _2701("2701"),
    
    _2702("2702"),
    
    _2703("2703"),
    
    _2704("2704"),
    
    _2705("2705"),
    
    _2706("2706"),
    
    _2707("2707"),
    
    _2708("2708"),
    
    _2709("2709"),
    
    _2710("2710"),
    
    _2711("2711"),
    
    _2712("2712"),
    
    _2713("2713"),
    
    _4801("4801"),
    
    _4802("4802"),
    
    _4807("4807"),
    
    _4808("4808"),
    
    _4809("4809"),
    
    _4812("4812"),
    
    _4831("4831"),
    
    _4834("4834"),
    
    _4835("4835"),
    
    _4837("4837"),
    
    _4840("4840"),
    
    _4841("4841"),
    
    _4842("4842"),
    
    _4846("4846"),
    
    _4847("4847"),
    
    _4849("4849"),
    
    _4850("4850"),
    
    _4853("4853"),
    
    _4854("4854"),
    
    _4855("4855"),
    
    _4856("4856"),
    
    _4857("4857"),
    
    _4859("4859"),
    
    _4860("4860"),
    
    _4862("4862"),
    
    _4900("4900"),
    
    _4901("4901"),
    
    _4902("4902"),
    
    _4903("4903"),
    
    _4905("4905"),
    
    _4908("4908"),
    
    _2000("2000"),
    
    _4870("4870"),
    
    _4871("4871"),
    
    _03("03"),
    
    _06("06"),
    
    _17("17"),
    
    _30("30"),
    
    _69("69"),
    
    _70("70"),
    
    _71("71"),
    
    _73("73"),
    
    _74("74"),
    
    _75("75"),
    
    _79("79"),
    
    _80("80"),
    
    _82("82"),
    
    _85("85"),
    
    _95("95"),
    
    _96("96"),
    
    _97("97"),
    
    _98("98"),
    
    _13("13"),
    
    _10("10"),
    
    _20("20"),
    
    _24("24"),
    
    _25("25"),
    
    _26("26"),
    
    _27("27"),
    
    _28("28"),
    
    _29("29");

    private String value;

    UpdatedChargebackReasonCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UpdatedChargebackReasonCodeEnum fromValue(String value) {
      for (UpdatedChargebackReasonCodeEnum b : UpdatedChargebackReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UpdatedChargebackReasonCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UpdatedChargebackReasonCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UpdatedChargebackReasonCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UpdatedChargebackReasonCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_UPDATED_CHARGEBACK_REASON_CODE = "updatedChargebackReasonCode";
  @SerializedName(SERIALIZED_NAME_UPDATED_CHARGEBACK_REASON_CODE)
  private UpdatedChargebackReasonCodeEnum updatedChargebackReasonCode;

  public static final String SERIALIZED_NAME_CHANGE_REASON_CODE_REASON = "changeReasonCodeReason";
  @SerializedName(SERIALIZED_NAME_CHANGE_REASON_CODE_REASON)
  private String changeReasonCodeReason;

  public static final String SERIALIZED_NAME_PRIMARY_ACCOUNT_NUM = "primaryAccountNum";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ACCOUNT_NUM)
  private String primaryAccountNum;

  public static final String SERIALIZED_NAME_ACQUIRER_REF_NUM = "acquirerRefNum";
  @SerializedName(SERIALIZED_NAME_ACQUIRER_REF_NUM)
  private String acquirerRefNum;

  /**
   * Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29
   */
  @JsonAdapter(ChargebackReasonCodeEnum.Adapter.class)
  public enum ChargebackReasonCodeEnum {
    _4863("4863"),
    
    _4899("4899"),
    
    _2001("2001"),
    
    _2002("2002"),
    
    _2003("2003"),
    
    _2004("2004"),
    
    _2005("2005"),
    
    _2008("2008"),
    
    _2011("2011"),
    
    _2700("2700"),
    
    _2701("2701"),
    
    _2702("2702"),
    
    _2703("2703"),
    
    _2704("2704"),
    
    _2705("2705"),
    
    _2706("2706"),
    
    _2707("2707"),
    
    _2708("2708"),
    
    _2709("2709"),
    
    _2710("2710"),
    
    _2711("2711"),
    
    _2712("2712"),
    
    _2713("2713"),
    
    _4801("4801"),
    
    _4802("4802"),
    
    _4807("4807"),
    
    _4808("4808"),
    
    _4809("4809"),
    
    _4812("4812"),
    
    _4831("4831"),
    
    _4834("4834"),
    
    _4835("4835"),
    
    _4837("4837"),
    
    _4840("4840"),
    
    _4841("4841"),
    
    _4842("4842"),
    
    _4846("4846"),
    
    _4847("4847"),
    
    _4849("4849"),
    
    _4850("4850"),
    
    _4853("4853"),
    
    _4854("4854"),
    
    _4855("4855"),
    
    _4856("4856"),
    
    _4857("4857"),
    
    _4859("4859"),
    
    _4860("4860"),
    
    _4862("4862"),
    
    _4900("4900"),
    
    _4901("4901"),
    
    _4902("4902"),
    
    _4903("4903"),
    
    _4905("4905"),
    
    _4908("4908"),
    
    _2000("2000"),
    
    _4870("4870"),
    
    _4871("4871"),
    
    _03("03"),
    
    _06("06"),
    
    _17("17"),
    
    _30("30"),
    
    _69("69"),
    
    _70("70"),
    
    _71("71"),
    
    _73("73"),
    
    _74("74"),
    
    _75("75"),
    
    _79("79"),
    
    _80("80"),
    
    _82("82"),
    
    _85("85"),
    
    _95("95"),
    
    _96("96"),
    
    _97("97"),
    
    _98("98"),
    
    _13("13"),
    
    _10("10"),
    
    _20("20"),
    
    _24("24"),
    
    _25("25"),
    
    _26("26"),
    
    _27("27"),
    
    _28("28"),
    
    _29("29");

    private String value;

    ChargebackReasonCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ChargebackReasonCodeEnum fromValue(String value) {
      for (ChargebackReasonCodeEnum b : ChargebackReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ChargebackReasonCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChargebackReasonCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ChargebackReasonCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ChargebackReasonCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CHARGEBACK_REASON_CODE = "chargebackReasonCode";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_REASON_CODE)
  private ChargebackReasonCodeEnum chargebackReasonCode;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_VIOLATION_CODE = "violationCode";
  @SerializedName(SERIALIZED_NAME_VIOLATION_CODE)
  private String violationCode;

  public static final String SERIALIZED_NAME_VIOLATION_DATE = "violationDate";
  @SerializedName(SERIALIZED_NAME_VIOLATION_DATE)
  private String violationDate;

  public static final String SERIALIZED_NAME_CHARGEBACK_DATE = "chargebackDate";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_DATE)
  private String chargebackDate;

  public static final String SERIALIZED_NAME_CREDIT_DATE = "creditDate";
  @SerializedName(SERIALIZED_NAME_CREDIT_DATE)
  private String creditDate;

  public static final String SERIALIZED_NAME_CASE_FILING_EBDF_DOCUMENTS = "caseFilingEbdfDocuments";
  @SerializedName(SERIALIZED_NAME_CASE_FILING_EBDF_DOCUMENTS)
  private CaseFilingEbdfStructure caseFilingEbdfDocuments;


  public CreateCaseRequest caseType(CaseTypeEnum caseType) {
    
    this.caseType = caseType;
    return this;
  }

   /**
   * Type of Case Filing.   Length: 1   Valid Values/Format: 1-Pre-arbitration, 2-Arbitration, 3-Pre-compliance, 4-Compliance
   * @return caseType
  **/
  @ApiModelProperty(example = "2", required = true, value = "Type of Case Filing.   Length: 1   Valid Values/Format: 1-Pre-arbitration, 2-Arbitration, 3-Pre-compliance, 4-Compliance")

  public CaseTypeEnum getCaseType() {
    return caseType;
  }


  public void setCaseType(CaseTypeEnum caseType) {
    this.caseType = caseType;
  }


  public CreateCaseRequest chargebackRefNum(List<String> chargebackRefNum) {
    
    this.chargebackRefNum = chargebackRefNum;
    return this;
  }

  public CreateCaseRequest addChargebackRefNumItem(String chargebackRefNumItem) {
    if (this.chargebackRefNum == null) {
      this.chargebackRefNum = new ArrayList<String>();
    }
    this.chargebackRefNum.add(chargebackRefNumItem);
    return this;
  }

   /**
   * A list of Chargeback Reference numbers.   CONDITIONAL: This field is mandatory and applicable if the case type is pre-arbitration or arbitration or if the primary account number field is not populated.   Pre-Arbitration and Arbitration case will have one chargeback to one case filing. Pre-Compliance and Compliance case can have many chargeback to one case filing.   Length: 0-10   Valid Values/Format: Numeric
   * @return chargebackRefNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Chargeback Reference numbers.   CONDITIONAL: This field is mandatory and applicable if the case type is pre-arbitration or arbitration or if the primary account number field is not populated.   Pre-Arbitration and Arbitration case will have one chargeback to one case filing. Pre-Compliance and Compliance case can have many chargeback to one case filing.   Length: 0-10   Valid Values/Format: Numeric")

  public List<String> getChargebackRefNum() {
    return chargebackRefNum;
  }


  public void setChargebackRefNum(List<String> chargebackRefNum) {
    this.chargebackRefNum = chargebackRefNum;
  }


  public CreateCaseRequest customerFilingNumber(String customerFilingNumber) {
    
    this.customerFilingNumber = customerFilingNumber;
    return this;
  }

   /**
   * Customer filing number which is the filing party&#39;s internal number.   Length: 0-15   Valid Values/Format: Numeric
   * @return customerFilingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5482", value = "Customer filing number which is the filing party's internal number.   Length: 0-15   Valid Values/Format: Numeric")

  public String getCustomerFilingNumber() {
    return customerFilingNumber;
  }


  public void setCustomerFilingNumber(String customerFilingNumber) {
    this.customerFilingNumber = customerFilingNumber;
  }


  public CreateCaseRequest disputeAmount(String disputeAmount) {
    
    this.disputeAmount = disputeAmount;
    return this;
  }

   /**
   * Dispute amount. The currency will be determined by the ICA region entered in the Filed ICA and Filed Against ICA.   Length: 1-10 (Integer Part). 2 (Decimal Part)   Valid Values/Format: Decimal
   * @return disputeAmount
  **/
  @ApiModelProperty(example = "200.00", required = true, value = "Dispute amount. The currency will be determined by the ICA region entered in the Filed ICA and Filed Against ICA.   Length: 1-10 (Integer Part). 2 (Decimal Part)   Valid Values/Format: Decimal")

  public String getDisputeAmount() {
    return disputeAmount;
  }


  public void setDisputeAmount(String disputeAmount) {
    this.disputeAmount = disputeAmount;
  }


  public CreateCaseRequest currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The case currency. Value should be standard alpha currency code.   For domestic transactions: domestic currency or USD   For cross-border transactions: USD or EUR, per Global Clearing Management System rules   Length: 3   Valid values/format: USD, EUR, GBP, MXN etc and A-Z (uppercase alphabetic letter)  
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", required = true, value = "The case currency. Value should be standard alpha currency code.   For domestic transactions: domestic currency or USD   For cross-border transactions: USD or EUR, per Global Clearing Management System rules   Length: 3   Valid values/format: USD, EUR, GBP, MXN etc and A-Z (uppercase alphabetic letter)  ")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CreateCaseRequest dueDate(String dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Due date when the response is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-20", value = "Due date when the response is required.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getDueDate() {
    return dueDate;
  }


  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }


  public CreateCaseRequest fileAttachment(DocumentStructure fileAttachment) {
    
    this.fileAttachment = fileAttachment;
    return this;
  }

   /**
   * Get fileAttachment
   * @return fileAttachment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DocumentStructure getFileAttachment() {
    return fileAttachment;
  }


  public void setFileAttachment(DocumentStructure fileAttachment) {
    this.fileAttachment = fileAttachment;
  }


  public CreateCaseRequest filedAgainstIca(String filedAgainstIca) {
    
    this.filedAgainstIca = filedAgainstIca;
    return this;
  }

   /**
   * Filed Against ICA.   Length: 1-11   Valid Values/Format: Numeric
   * @return filedAgainstIca
  **/
  @ApiModelProperty(example = "004321", required = true, value = "Filed Against ICA.   Length: 1-11   Valid Values/Format: Numeric")

  public String getFiledAgainstIca() {
    return filedAgainstIca;
  }


  public void setFiledAgainstIca(String filedAgainstIca) {
    this.filedAgainstIca = filedAgainstIca;
  }


  public CreateCaseRequest filingAs(FilingAsEnum filingAs) {
    
    this.filingAs = filingAs;
    return this;
  }

   /**
   * Filing case as Issuer or Acquirer.   Length: 1   Valid Values/Format: I, A
   * @return filingAs
  **/
  @ApiModelProperty(example = "A", required = true, value = "Filing case as Issuer or Acquirer.   Length: 1   Valid Values/Format: I, A")

  public FilingAsEnum getFilingAs() {
    return filingAs;
  }


  public void setFilingAs(FilingAsEnum filingAs) {
    this.filingAs = filingAs;
  }


  public CreateCaseRequest filingIca(String filingIca) {
    
    this.filingIca = filingIca;
    return this;
  }

   /**
   * Filing ICA.   Length: 1-11   Valid Values/Format: Numeric
   * @return filingIca
  **/
  @ApiModelProperty(example = "001234", required = true, value = "Filing ICA.   Length: 1-11   Valid Values/Format: Numeric")

  public String getFilingIca() {
    return filingIca;
  }


  public void setFilingIca(String filingIca) {
    this.filingIca = filingIca;
  }


  public CreateCaseRequest memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Enter a Memo pertaining to the case.   Length: 1-13000   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return memo
  **/
  @ApiModelProperty(example = "This is a test memo", required = true, value = "Enter a Memo pertaining to the case.   Length: 1-13000   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  public CreateCaseRequest messageText(String messageText) {
    
    this.messageText = messageText;
    return this;
  }

   /**
   * Enter a MessageText pertaining to the case.   CONDITIONAL: Applicable only for filing pre-arbitration and arbitration case for sender while creating the case.   Length: 1-100   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return messageText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a test message", value = "Enter a MessageText pertaining to the case.   CONDITIONAL: Applicable only for filing pre-arbitration and arbitration case for sender while creating the case.   Length: 1-100   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getMessageText() {
    return messageText;
  }


  public void setMessageText(String messageText) {
    this.messageText = messageText;
  }


  public CreateCaseRequest changeReasonCodeFlag(String changeReasonCodeFlag) {
    
    this.changeReasonCodeFlag = changeReasonCodeFlag;
    return this;
  }

   /**
   * Change reason code Flag.   CONDITIONAL: Applicable only for filing pre-arbitration and arbitration case for sender while creating the case.   Length: 1   Valid Values/Format: Y,N
   * @return changeReasonCodeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Y", value = "Change reason code Flag.   CONDITIONAL: Applicable only for filing pre-arbitration and arbitration case for sender while creating the case.   Length: 1   Valid Values/Format: Y,N")

  public String getChangeReasonCodeFlag() {
    return changeReasonCodeFlag;
  }


  public void setChangeReasonCodeFlag(String changeReasonCodeFlag) {
    this.changeReasonCodeFlag = changeReasonCodeFlag;
  }


  public CreateCaseRequest updatedChargebackReasonCode(UpdatedChargebackReasonCodeEnum updatedChargebackReasonCode) {
    
    this.updatedChargebackReasonCode = updatedChargebackReasonCode;
    return this;
  }

   /**
   * Updated Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case for sender while creating the case and if changeReasonCodeFlag is Y.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29
   * @return updatedChargebackReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4863", value = "Updated Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case for sender while creating the case and if changeReasonCodeFlag is Y.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29")

  public UpdatedChargebackReasonCodeEnum getUpdatedChargebackReasonCode() {
    return updatedChargebackReasonCode;
  }


  public void setUpdatedChargebackReasonCode(UpdatedChargebackReasonCodeEnum updatedChargebackReasonCode) {
    this.updatedChargebackReasonCode = updatedChargebackReasonCode;
  }


  public CreateCaseRequest changeReasonCodeReason(String changeReasonCodeReason) {
    
    this.changeReasonCodeReason = changeReasonCodeReason;
    return this;
  }

   /**
   * Change reason Code reason.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case for sender while creating the case and if changeReasonCodeFlag is Y.   Length: 1-1000   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return changeReasonCodeReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a test reason", value = "Change reason Code reason.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case for sender while creating the case and if changeReasonCodeFlag is Y.   Length: 1-1000   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getChangeReasonCodeReason() {
    return changeReasonCodeReason;
  }


  public void setChangeReasonCodeReason(String changeReasonCodeReason) {
    this.changeReasonCodeReason = changeReasonCodeReason;
  }


  public CreateCaseRequest primaryAccountNum(String primaryAccountNum) {
    
    this.primaryAccountNum = primaryAccountNum;
    return this;
  }

   /**
   * The primary account number.   CONDITIONAL: This field is mandatory and applicable if the chargeback ref number field is not populated.   Length: 1-19   Valid Values/Format: Numeric
   * @return primaryAccountNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5123123412341234", value = "The primary account number.   CONDITIONAL: This field is mandatory and applicable if the chargeback ref number field is not populated.   Length: 1-19   Valid Values/Format: Numeric")

  public String getPrimaryAccountNum() {
    return primaryAccountNum;
  }


  public void setPrimaryAccountNum(String primaryAccountNum) {
    this.primaryAccountNum = primaryAccountNum;
  }


  public CreateCaseRequest acquirerRefNum(String acquirerRefNum) {
    
    this.acquirerRefNum = acquirerRefNum;
    return this;
  }

   /**
   * The acquirer reference number.   CONDITIONAL: This field is mandatory and applicable if case is created using primary account number.   Length: 1-23   Valid Values/Format: Numeric
   * @return acquirerRefNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "05131054165000000048149", value = "The acquirer reference number.   CONDITIONAL: This field is mandatory and applicable if case is created using primary account number.   Length: 1-23   Valid Values/Format: Numeric")

  public String getAcquirerRefNum() {
    return acquirerRefNum;
  }


  public void setAcquirerRefNum(String acquirerRefNum) {
    this.acquirerRefNum = acquirerRefNum;
  }


  public CreateCaseRequest chargebackReasonCode(ChargebackReasonCodeEnum chargebackReasonCode) {
    
    this.chargebackReasonCode = chargebackReasonCode;
    return this;
  }

   /**
   * Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29
   * @return chargebackReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4863", value = "Chargeback Reason Code.   CONDITIONAL: Required and applicable for filing pre-arbitration and arbitration case.   Length: 2-4   Valid Values/Format: 4863,4899,2001,2002,2003,2004,2005,2008,2011,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,4801,4802,4807,4808,4809,4812,4831,4834,4835,4837,4840,4841,4842,4846,4847,4849,4850,4853,4854,4855,4856,4857,4859,4860,4862,4900,4901,4902,4903,4905,4908,2000,4870,4871,03,06,17,30,69,70,71,73,74,75,79,80,82,85,95,96,97,98,13,10,20,24,25,26,27,28,29")

  public ChargebackReasonCodeEnum getChargebackReasonCode() {
    return chargebackReasonCode;
  }


  public void setChargebackReasonCode(ChargebackReasonCodeEnum chargebackReasonCode) {
    this.chargebackReasonCode = chargebackReasonCode;
  }


  public CreateCaseRequest merchantName(String merchantName) {
    
    this.merchantName = merchantName;
    return this;
  }

   /**
   * Merchant name.   CONDITIONAL: This is required and applicable for filing pre-arbitration and arbitration case.   Length: 0-100   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?,./;&#39;[]-&#x3D;)
   * @return merchantName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test name", value = "Merchant name.   CONDITIONAL: This is required and applicable for filing pre-arbitration and arbitration case.   Length: 0-100   Valid Values/Format: Alphanumeric and Special Characters (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)")

  public String getMerchantName() {
    return merchantName;
  }


  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public CreateCaseRequest violationCode(String violationCode) {
    
    this.violationCode = violationCode;
    return this;
  }

   /**
   * Violation code.   CONDITIONAL: This is only applicable and mandatory in case of pre-compliance and compliance types of cases   Length: 1-20   Valid Values/Format: Alphanumeric and Special Character (.)
   * @return violationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "D.2", value = "Violation code.   CONDITIONAL: This is only applicable and mandatory in case of pre-compliance and compliance types of cases   Length: 1-20   Valid Values/Format: Alphanumeric and Special Character (.)")

  public String getViolationCode() {
    return violationCode;
  }


  public void setViolationCode(String violationCode) {
    this.violationCode = violationCode;
  }


  public CreateCaseRequest violationDate(String violationDate) {
    
    this.violationDate = violationDate;
    return this;
  }

   /**
   * Violation Date.   CONDITIONAL: This is only applicable and mandatory in case of pre-compliance and compliance types of cases.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return violationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-15", value = "Violation Date.   CONDITIONAL: This is only applicable and mandatory in case of pre-compliance and compliance types of cases.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getViolationDate() {
    return violationDate;
  }


  public void setViolationDate(String violationDate) {
    this.violationDate = violationDate;
  }


  public CreateCaseRequest chargebackDate(String chargebackDate) {
    
    this.chargebackDate = chargebackDate;
    return this;
  }

   /**
   * Chargeback Date.   CONDITIONAL:  This is only applicable and mandatory in case of pre-compliance and compliance types of cases with a violation code of 1.4.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return chargebackDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-15", value = "Chargeback Date.   CONDITIONAL:  This is only applicable and mandatory in case of pre-compliance and compliance types of cases with a violation code of 1.4.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getChargebackDate() {
    return chargebackDate;
  }


  public void setChargebackDate(String chargebackDate) {
    this.chargebackDate = chargebackDate;
  }


  public CreateCaseRequest creditDate(String creditDate) {
    
    this.creditDate = creditDate;
    return this;
  }

   /**
   * Credit Date.   CONDITIONAL:  This is only applicable and mandatory in case of pre-compliance and compliance types of cases with a violation code of 1.4.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
   * @return creditDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-15", value = "Credit Date.   CONDITIONAL:  This is only applicable and mandatory in case of pre-compliance and compliance types of cases with a violation code of 1.4.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)")

  public String getCreditDate() {
    return creditDate;
  }


  public void setCreditDate(String creditDate) {
    this.creditDate = creditDate;
  }


  public CreateCaseRequest caseFilingEbdfDocuments(CaseFilingEbdfStructure caseFilingEbdfDocuments) {
    
    this.caseFilingEbdfDocuments = caseFilingEbdfDocuments;
    return this;
  }

   /**
   * Get caseFilingEbdfDocuments
   * @return caseFilingEbdfDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CaseFilingEbdfStructure getCaseFilingEbdfDocuments() {
    return caseFilingEbdfDocuments;
  }


  public void setCaseFilingEbdfDocuments(CaseFilingEbdfStructure caseFilingEbdfDocuments) {
    this.caseFilingEbdfDocuments = caseFilingEbdfDocuments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCaseRequest createCaseRequest = (CreateCaseRequest) o;
    return Objects.equals(this.caseType, createCaseRequest.caseType) &&
        Objects.equals(this.chargebackRefNum, createCaseRequest.chargebackRefNum) &&
        Objects.equals(this.customerFilingNumber, createCaseRequest.customerFilingNumber) &&
        Objects.equals(this.disputeAmount, createCaseRequest.disputeAmount) &&
        Objects.equals(this.currencyCode, createCaseRequest.currencyCode) &&
        Objects.equals(this.dueDate, createCaseRequest.dueDate) &&
        Objects.equals(this.fileAttachment, createCaseRequest.fileAttachment) &&
        Objects.equals(this.filedAgainstIca, createCaseRequest.filedAgainstIca) &&
        Objects.equals(this.filingAs, createCaseRequest.filingAs) &&
        Objects.equals(this.filingIca, createCaseRequest.filingIca) &&
        Objects.equals(this.memo, createCaseRequest.memo) &&
        Objects.equals(this.messageText, createCaseRequest.messageText) &&
        Objects.equals(this.changeReasonCodeFlag, createCaseRequest.changeReasonCodeFlag) &&
        Objects.equals(this.updatedChargebackReasonCode, createCaseRequest.updatedChargebackReasonCode) &&
        Objects.equals(this.changeReasonCodeReason, createCaseRequest.changeReasonCodeReason) &&
        Objects.equals(this.primaryAccountNum, createCaseRequest.primaryAccountNum) &&
        Objects.equals(this.acquirerRefNum, createCaseRequest.acquirerRefNum) &&
        Objects.equals(this.chargebackReasonCode, createCaseRequest.chargebackReasonCode) &&
        Objects.equals(this.merchantName, createCaseRequest.merchantName) &&
        Objects.equals(this.violationCode, createCaseRequest.violationCode) &&
        Objects.equals(this.violationDate, createCaseRequest.violationDate) &&
        Objects.equals(this.chargebackDate, createCaseRequest.chargebackDate) &&
        Objects.equals(this.creditDate, createCaseRequest.creditDate) &&
        Objects.equals(this.caseFilingEbdfDocuments, createCaseRequest.caseFilingEbdfDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseType, chargebackRefNum, customerFilingNumber, disputeAmount, currencyCode, dueDate, fileAttachment, filedAgainstIca, filingAs, filingIca, memo, messageText, changeReasonCodeFlag, updatedChargebackReasonCode, changeReasonCodeReason, primaryAccountNum, acquirerRefNum, chargebackReasonCode, merchantName, violationCode, violationDate, chargebackDate, creditDate, caseFilingEbdfDocuments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCaseRequest {\n");
    sb.append("    caseType: ").append(toIndentedString(caseType)).append("\n");
    sb.append("    chargebackRefNum: ").append(toIndentedString(chargebackRefNum)).append("\n");
    sb.append("    customerFilingNumber: ").append(toIndentedString(customerFilingNumber)).append("\n");
    sb.append("    disputeAmount: ").append(toIndentedString(disputeAmount)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    fileAttachment: ").append(toIndentedString(fileAttachment)).append("\n");
    sb.append("    filedAgainstIca: ").append(toIndentedString(filedAgainstIca)).append("\n");
    sb.append("    filingAs: ").append(toIndentedString(filingAs)).append("\n");
    sb.append("    filingIca: ").append(toIndentedString(filingIca)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    messageText: ").append(toIndentedString(messageText)).append("\n");
    sb.append("    changeReasonCodeFlag: ").append(toIndentedString(changeReasonCodeFlag)).append("\n");
    sb.append("    updatedChargebackReasonCode: ").append(toIndentedString(updatedChargebackReasonCode)).append("\n");
    sb.append("    changeReasonCodeReason: ").append(toIndentedString(changeReasonCodeReason)).append("\n");
    sb.append("    primaryAccountNum: ").append(toIndentedString(primaryAccountNum)).append("\n");
    sb.append("    acquirerRefNum: ").append(toIndentedString(acquirerRefNum)).append("\n");
    sb.append("    chargebackReasonCode: ").append(toIndentedString(chargebackReasonCode)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    violationCode: ").append(toIndentedString(violationCode)).append("\n");
    sb.append("    violationDate: ").append(toIndentedString(violationDate)).append("\n");
    sb.append("    chargebackDate: ").append(toIndentedString(chargebackDate)).append("\n");
    sb.append("    creditDate: ").append(toIndentedString(creditDate)).append("\n");
    sb.append("    caseFilingEbdfDocuments: ").append(toIndentedString(caseFilingEbdfDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

