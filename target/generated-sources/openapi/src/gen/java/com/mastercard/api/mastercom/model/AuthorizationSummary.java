/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.api.mastercom.model.ClearingSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AuthorizationSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class AuthorizationSummary {
  public static final String SERIALIZED_NAME_ORIGINAL_MESSAGE_TYPE_IDENTIFIER = "originalMessageTypeIdentifier";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_MESSAGE_TYPE_IDENTIFIER)
  private String originalMessageTypeIdentifier;

  public static final String SERIALIZED_NAME_BANKNET_DATE = "banknetDate";
  @SerializedName(SERIALIZED_NAME_BANKNET_DATE)
  private String banknetDate;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT_USD = "transactionAmountUsd";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT_USD)
  private String transactionAmountUsd;

  public static final String SERIALIZED_NAME_PRIMARY_ACCOUNT_NUMBER = "primaryAccountNumber";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ACCOUNT_NUMBER)
  private String primaryAccountNumber;

  public static final String SERIALIZED_NAME_PROCESSING_CODE = "processingCode";
  @SerializedName(SERIALIZED_NAME_PROCESSING_CODE)
  private String processingCode;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT_LOCAL = "transactionAmountLocal";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT_LOCAL)
  private String transactionAmountLocal;

  public static final String SERIALIZED_NAME_AUTHORIZATION_DATE_AND_TIME = "authorizationDateAndTime";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_DATE_AND_TIME)
  private String authorizationDateAndTime;

  public static final String SERIALIZED_NAME_AUTHENTICATION_ID = "authenticationId";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_ID)
  private String authenticationId;

  public static final String SERIALIZED_NAME_CARD_ACCEPTOR_NAME = "cardAcceptorName";
  @SerializedName(SERIALIZED_NAME_CARD_ACCEPTOR_NAME)
  private String cardAcceptorName;

  public static final String SERIALIZED_NAME_CARD_ACCEPTOR_CITY = "cardAcceptorCity";
  @SerializedName(SERIALIZED_NAME_CARD_ACCEPTOR_CITY)
  private String cardAcceptorCity;

  public static final String SERIALIZED_NAME_CARD_ACCEPTOR_STATE = "cardAcceptorState";
  @SerializedName(SERIALIZED_NAME_CARD_ACCEPTOR_STATE)
  private String cardAcceptorState;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CHIP_PRESENT = "chipPresent";
  @SerializedName(SERIALIZED_NAME_CHIP_PRESENT)
  private String chipPresent;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_TRACK1 = "track1";
  @SerializedName(SERIALIZED_NAME_TRACK1)
  private String track1;

  public static final String SERIALIZED_NAME_TRACK2 = "track2";
  @SerializedName(SERIALIZED_NAME_TRACK2)
  private String track2;

  public static final String SERIALIZED_NAME_CLEARING_SUMMARY = "clearingSummary";
  @SerializedName(SERIALIZED_NAME_CLEARING_SUMMARY)
  private List<ClearingSummary> clearingSummary = null;


  public AuthorizationSummary originalMessageTypeIdentifier(String originalMessageTypeIdentifier) {
    
    this.originalMessageTypeIdentifier = originalMessageTypeIdentifier;
    return this;
  }

   /**
   * Indicates the Message Type Identifier (MTI) of the original message
   * @return originalMessageTypeIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0110", value = "Indicates the Message Type Identifier (MTI) of the original message")

  public String getOriginalMessageTypeIdentifier() {
    return originalMessageTypeIdentifier;
  }


  public void setOriginalMessageTypeIdentifier(String originalMessageTypeIdentifier) {
    this.originalMessageTypeIdentifier = originalMessageTypeIdentifier;
  }


  public AuthorizationSummary banknetDate(String banknetDate) {
    
    this.banknetDate = banknetDate;
    return this;
  }

   /**
   * The date/time when the SAFE record is matched to the Authorization transaction
   * @return banknetDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "210127", value = "The date/time when the SAFE record is matched to the Authorization transaction")

  public String getBanknetDate() {
    return banknetDate;
  }


  public void setBanknetDate(String banknetDate) {
    this.banknetDate = banknetDate;
  }


  public AuthorizationSummary transactionAmountUsd(String transactionAmountUsd) {
    
    this.transactionAmountUsd = transactionAmountUsd;
    return this;
  }

   /**
   * Transaction amount in USD
   * @return transactionAmountUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "401.17", value = "Transaction amount in USD")

  public String getTransactionAmountUsd() {
    return transactionAmountUsd;
  }


  public void setTransactionAmountUsd(String transactionAmountUsd) {
    this.transactionAmountUsd = transactionAmountUsd;
  }


  public AuthorizationSummary primaryAccountNumber(String primaryAccountNumber) {
    
    this.primaryAccountNumber = primaryAccountNumber;
    return this;
  }

   /**
   * Primary account number
   * @return primaryAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5488888888887192", value = "Primary account number")

  public String getPrimaryAccountNumber() {
    return primaryAccountNumber;
  }


  public void setPrimaryAccountNumber(String primaryAccountNumber) {
    this.primaryAccountNumber = primaryAccountNumber;
  }


  public AuthorizationSummary processingCode(String processingCode) {
    
    this.processingCode = processingCode;
    return this;
  }

   /**
   * A series of digits used to describe the effect of a transaction on the customer account and the type of accounts affected
   * @return processingCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00", value = "A series of digits used to describe the effect of a transaction on the customer account and the type of accounts affected")

  public String getProcessingCode() {
    return processingCode;
  }


  public void setProcessingCode(String processingCode) {
    this.processingCode = processingCode;
  }


  public AuthorizationSummary transactionAmountLocal(String transactionAmountLocal) {
    
    this.transactionAmountLocal = transactionAmountLocal;
    return this;
  }

   /**
   * Transaction amount in local currency
   * @return transactionAmountLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "000000010000", value = "Transaction amount in local currency")

  public String getTransactionAmountLocal() {
    return transactionAmountLocal;
  }


  public void setTransactionAmountLocal(String transactionAmountLocal) {
    this.transactionAmountLocal = transactionAmountLocal;
  }


  public AuthorizationSummary authorizationDateAndTime(String authorizationDateAndTime) {
    
    this.authorizationDateAndTime = authorizationDateAndTime;
    return this;
  }

   /**
   * The date and time that a message is entered into the Mastercard Network
   * @return authorizationDateAndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0127125633", value = "The date and time that a message is entered into the Mastercard Network")

  public String getAuthorizationDateAndTime() {
    return authorizationDateAndTime;
  }


  public void setAuthorizationDateAndTime(String authorizationDateAndTime) {
    this.authorizationDateAndTime = authorizationDateAndTime;
  }


  public AuthorizationSummary authenticationId(String authenticationId) {
    
    this.authenticationId = authenticationId;
    return this;
  }

   /**
   * Defined by the Authorization Platform and is passed to the issuer to indicate that the transaction qualified for Authentication service
   * @return authenticationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "418443", value = "Defined by the Authorization Platform and is passed to the issuer to indicate that the transaction qualified for Authentication service")

  public String getAuthenticationId() {
    return authenticationId;
  }


  public void setAuthenticationId(String authenticationId) {
    this.authenticationId = authenticationId;
  }


  public AuthorizationSummary cardAcceptorName(String cardAcceptorName) {
    
    this.cardAcceptorName = cardAcceptorName;
    return this;
  }

   /**
   * Name the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)
   * @return cardAcceptorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Amazon", value = "Name the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)")

  public String getCardAcceptorName() {
    return cardAcceptorName;
  }


  public void setCardAcceptorName(String cardAcceptorName) {
    this.cardAcceptorName = cardAcceptorName;
  }


  public AuthorizationSummary cardAcceptorCity(String cardAcceptorCity) {
    
    this.cardAcceptorCity = cardAcceptorCity;
    return this;
  }

   /**
   * City of the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)
   * @return cardAcceptorCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SAINT LOUIS", value = "City of the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)")

  public String getCardAcceptorCity() {
    return cardAcceptorCity;
  }


  public void setCardAcceptorCity(String cardAcceptorCity) {
    this.cardAcceptorCity = cardAcceptorCity;
  }


  public AuthorizationSummary cardAcceptorState(String cardAcceptorState) {
    
    this.cardAcceptorState = cardAcceptorState;
    return this;
  }

   /**
   * State of the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)
   * @return cardAcceptorState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MO", value = "State of the card acceptor that defines the point of interaction in both local and interchange environments (excluding ATM and Card-Activated Public Phones)")

  public String getCardAcceptorState() {
    return cardAcceptorState;
  }


  public void setCardAcceptorState(String cardAcceptorState) {
    this.cardAcceptorState = cardAcceptorState;
  }


  public AuthorizationSummary currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Currency code the issuer will be charging the cardholder for repayment
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "840", value = "Currency code the issuer will be charging the cardholder for repayment")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public AuthorizationSummary chipPresent(String chipPresent) {
    
    this.chipPresent = chipPresent;
    return this;
  }

   /**
   * Indicates if chip was present or not
   * @return chipPresent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "N", value = "Indicates if chip was present or not")

  public String getChipPresent() {
    return chipPresent;
  }


  public void setChipPresent(String chipPresent) {
    this.chipPresent = chipPresent;
  }


  public AuthorizationSummary transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * The host&#39;s identifier
   * @return transactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hqCnaMDqmto4wnL+BSUKSdzROqGJ7YELoKhEvluycwKNg3XTzSfaIJhFDkl9hW081B5tTqFFiAwCpcocPdB2My4t7DtSTk63VXDl1CySA8Y=", value = "The host's identifier")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public AuthorizationSummary track1(String track1) {
    
    this.track1 = track1;
    return this;
  }

   /**
   * The information encoded on track 1 of the card&#39;s magnetic stripe as defined in the ISO 7813 specification, including data element separators but excluding beginning and ending sentinels and LRC characters as defined in this data element definition
   * @return track1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "N", value = "The information encoded on track 1 of the card's magnetic stripe as defined in the ISO 7813 specification, including data element separators but excluding beginning and ending sentinels and LRC characters as defined in this data element definition")

  public String getTrack1() {
    return track1;
  }


  public void setTrack1(String track1) {
    this.track1 = track1;
  }


  public AuthorizationSummary track2(String track2) {
    
    this.track2 = track2;
    return this;
  }

   /**
   * The information encoded on track 2 of the card magnetic stripe as defined in the ISO 7813 specification, including data element separators but excluding beginning and ending sentinels and longitudinal redundancy check (LRC) characters as defined therein
   * @return track2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Y101", value = "The information encoded on track 2 of the card magnetic stripe as defined in the ISO 7813 specification, including data element separators but excluding beginning and ending sentinels and longitudinal redundancy check (LRC) characters as defined therein")

  public String getTrack2() {
    return track2;
  }


  public void setTrack2(String track2) {
    this.track2 = track2;
  }


  public AuthorizationSummary clearingSummary(List<ClearingSummary> clearingSummary) {
    
    this.clearingSummary = clearingSummary;
    return this;
  }

  public AuthorizationSummary addClearingSummaryItem(ClearingSummary clearingSummaryItem) {
    if (this.clearingSummary == null) {
      this.clearingSummary = new ArrayList<ClearingSummary>();
    }
    this.clearingSummary.add(clearingSummaryItem);
    return this;
  }

   /**
   * Get clearingSummary
   * @return clearingSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ClearingSummary> getClearingSummary() {
    return clearingSummary;
  }


  public void setClearingSummary(List<ClearingSummary> clearingSummary) {
    this.clearingSummary = clearingSummary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationSummary authorizationSummary = (AuthorizationSummary) o;
    return Objects.equals(this.originalMessageTypeIdentifier, authorizationSummary.originalMessageTypeIdentifier) &&
        Objects.equals(this.banknetDate, authorizationSummary.banknetDate) &&
        Objects.equals(this.transactionAmountUsd, authorizationSummary.transactionAmountUsd) &&
        Objects.equals(this.primaryAccountNumber, authorizationSummary.primaryAccountNumber) &&
        Objects.equals(this.processingCode, authorizationSummary.processingCode) &&
        Objects.equals(this.transactionAmountLocal, authorizationSummary.transactionAmountLocal) &&
        Objects.equals(this.authorizationDateAndTime, authorizationSummary.authorizationDateAndTime) &&
        Objects.equals(this.authenticationId, authorizationSummary.authenticationId) &&
        Objects.equals(this.cardAcceptorName, authorizationSummary.cardAcceptorName) &&
        Objects.equals(this.cardAcceptorCity, authorizationSummary.cardAcceptorCity) &&
        Objects.equals(this.cardAcceptorState, authorizationSummary.cardAcceptorState) &&
        Objects.equals(this.currencyCode, authorizationSummary.currencyCode) &&
        Objects.equals(this.chipPresent, authorizationSummary.chipPresent) &&
        Objects.equals(this.transactionId, authorizationSummary.transactionId) &&
        Objects.equals(this.track1, authorizationSummary.track1) &&
        Objects.equals(this.track2, authorizationSummary.track2) &&
        Objects.equals(this.clearingSummary, authorizationSummary.clearingSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalMessageTypeIdentifier, banknetDate, transactionAmountUsd, primaryAccountNumber, processingCode, transactionAmountLocal, authorizationDateAndTime, authenticationId, cardAcceptorName, cardAcceptorCity, cardAcceptorState, currencyCode, chipPresent, transactionId, track1, track2, clearingSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationSummary {\n");
    sb.append("    originalMessageTypeIdentifier: ").append(toIndentedString(originalMessageTypeIdentifier)).append("\n");
    sb.append("    banknetDate: ").append(toIndentedString(banknetDate)).append("\n");
    sb.append("    transactionAmountUsd: ").append(toIndentedString(transactionAmountUsd)).append("\n");
    sb.append("    primaryAccountNumber: ").append(toIndentedString(primaryAccountNumber)).append("\n");
    sb.append("    processingCode: ").append(toIndentedString(processingCode)).append("\n");
    sb.append("    transactionAmountLocal: ").append(toIndentedString(transactionAmountLocal)).append("\n");
    sb.append("    authorizationDateAndTime: ").append(toIndentedString(authorizationDateAndTime)).append("\n");
    sb.append("    authenticationId: ").append(toIndentedString(authenticationId)).append("\n");
    sb.append("    cardAcceptorName: ").append(toIndentedString(cardAcceptorName)).append("\n");
    sb.append("    cardAcceptorCity: ").append(toIndentedString(cardAcceptorCity)).append("\n");
    sb.append("    cardAcceptorState: ").append(toIndentedString(cardAcceptorState)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    chipPresent: ").append(toIndentedString(chipPresent)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    track1: ").append(toIndentedString(track1)).append("\n");
    sb.append("    track2: ").append(toIndentedString(track2)).append("\n");
    sb.append("    clearingSummary: ").append(toIndentedString(clearingSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

