/*
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.mastercom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CaseFilingStatusResponseStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-11T16:27:04.249+05:30[Asia/Kolkata]")
public class CaseFilingStatusResponseStructure {
  public static final String SERIALIZED_NAME_CASE_ID = "caseId";
  @SerializedName(SERIALIZED_NAME_CASE_ID)
  private String caseId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;


  public CaseFilingStatusResponseStructure caseId(String caseId) {
    
    this.caseId = caseId;
    return this;
  }

   /**
   * Case Id
   * @return caseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "536092", value = "Case Id")

  public String getCaseId() {
    return caseId;
  }


  public void setCaseId(String caseId) {
    this.caseId = caseId;
  }


  public CaseFilingStatusResponseStructure status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of case filing images.   If neither party attached documentation, valid responses are in the format \&quot;UNAVAILABLE\&quot;.   If either party attached documentation, valid responses are in the format \&quot;Status_Party_processDate_REBUT\&quot;.  * Valid values for \&quot;Status\&quot; are COMPLETED, PENDING, FAILED, and UNAVAILABLE.  * Valid values for \&quot;Party\&quot; are SND (sender) and REC (receiver).  * \&quot;processDate\&quot; is formatted MM/DD/YYYY HH:MM:SS AM/PM.  * \&quot;REBUT\&quot; will be suffixed to the status when the case is rebutted.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "COMPLETED_SND_2/10/2021 8:43:21 AM", value = "Status of case filing images.   If neither party attached documentation, valid responses are in the format \"UNAVAILABLE\".   If either party attached documentation, valid responses are in the format \"Status_Party_processDate_REBUT\".  * Valid values for \"Status\" are COMPLETED, PENDING, FAILED, and UNAVAILABLE.  * Valid values for \"Party\" are SND (sender) and REC (receiver).  * \"processDate\" is formatted MM/DD/YYYY HH:MM:SS AM/PM.  * \"REBUT\" will be suffixed to the status when the case is rebutted.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseFilingStatusResponseStructure caseFilingStatusResponseStructure = (CaseFilingStatusResponseStructure) o;
    return Objects.equals(this.caseId, caseFilingStatusResponseStructure.caseId) &&
        Objects.equals(this.status, caseFilingStatusResponseStructure.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseId, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseFilingStatusResponseStructure {\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

